<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue项目中加入百度统计</title>
      <link href="/2022/10/08/vue21/"/>
      <url>/2022/10/08/vue21/</url>
      
        <content type="html"><![CDATA[<p>原本我用的是CNZZ插件来做访客统计的功能，但是现在不免费了，一年最低要近1000块大洋才能使用，我只能呵呵。</p><p>主要是网站没人气嘛没必要花这笔钱，而且还穷。</p><p>那就这样吧，再用下下去，就不划算了！！！</p><p>于是在百度搜罗资料，寻求一个Vue项目能做访客统计的插件。</p><p>最终选中了百度统计这款插件，话不多说，用起来先！</p><p>1.申请百度统计的账号（已有账号请跳过此步。）</p><span id="more"></span><blockquote><p>官方地址：<a href="https://tongji.baidu.com/sc-web/">https://tongji.baidu.com/sc-web/</a></p></blockquote><p>2.新建网站，获取代码</p><blockquote><p>需要填写项：网站域名、网站首页、网站首页、行业类别<br>其中“网站域名“和”网站首页”是必填，因为直接关系到统计的对象</p></blockquote><p>填写好之后，如果后续要调整是可以编辑的；</p><p>这里我发现，配置好之后总是会直接进入统计页面，后续难找到这个页面，于是我自己做了一个记录：这是我的后台，你的自己记录，嘿嘿。</p><p>创建好之后，点击“获取代码”，然后“复制代码”，这个代码就是我们需要用到网站配置中去的。</p><p>3.在Vue项目中引入统计的代码，实现统计功能</p><p>Vue的项目不同于其它直观的Web项目，如果直接在script脚本中引入，无法生效；</p><p>1）在App.vue页面created中放入统计代码（这里放你自己的代码，我呈现的是我的）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">created</span></span>() &#123;</span><br><span class="line">   var _hmt = _hmt || [];</span><br><span class="line">   (<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">     var hm = document.createElement(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">     hm.src = <span class="string">&quot;https://hm.baidu.com/hm.js?d76ad973f84629076d1bae45eb4d2ad5&quot;</span>;</span><br><span class="line">     var s = document.getElementsByTagName(<span class="string">&quot;script&quot;</span>)[0];</span><br><span class="line">     s.parentNode.insertBefore(hm, s);</span><br><span class="line">   &#125;)();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>2）在main.js中添加以下内容</p><pre><code class="bash">router.beforeEach((to, from, next) =&gt; &#123;  //添加页面访问记录  if (to.path) &#123;    if (window._hmt) &#123;      window._hmt.push([&#39;_trackPageview&#39;, &#39;/#&#39; + to.fullPath])    &#125;  &#125;  next()&#125;)</code></pre><p>3）完成以上两步后，我们就可以打包网站部署到服务器上去了，接下来就是验证统计功能有没有生效</p><blockquote><p>回到刚才生成统计代码的页面，点击代码检查，或者点击前面的刷新按钮；系统便会检测统计功能是否生效;如果生效“首页代码状态”显示的是“代码安装正确”</p></blockquote><p>注意：生效后大概20分钟才会生成访问分析的报告。</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 百度统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中UI库Ant Design Vue 回到顶部（BackTop）组件的使用</title>
      <link href="/2022/10/08/vue20/"/>
      <url>/2022/10/08/vue20/</url>
      
        <content type="html"><![CDATA[<p>首先看下官方文档的使用说明，写出了以下范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div <span class="built_in">id</span>=<span class="string">&quot;components-back-top-demo-custom&quot;</span>&gt;</span><br><span class="line">      &lt;a-back-top&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;ant-back-top-inner&quot;</span>&gt;</span><br><span class="line">          &lt;a-icon <span class="built_in">type</span>=<span class="string">&quot;up&quot;</span>&gt;&lt;/a-icon&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/a-back-top&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/template&gt;</span><br></pre></td></tr></table></figure><span id="more"></span>    <p>可能有的开发人员会碰到回到顶部的图标并没有加载出来，F12看下页面源码也只有最外层DIV,而a-back-top,并没有渲染出来，也就是没有生效。</p><p>遇到这种情况是因为当前滚动区域并不是Window(整个视窗)，而是其中的某一块（DIV）;</p><p>也就是说要让BackTop生效，那么它所绑定的对象必须是可滚动的，这样才会生效。</p><p>这就要用到一个属性：target</p><p>我们调整以下刚刚的写法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">      &lt;div <span class="built_in">id</span>=<span class="string">&quot;components-back-top-demo-custom&quot;</span>&gt;</span><br><span class="line">        &lt;a-back-top :target=<span class="string">&quot;backtop&quot;</span>&gt;</span><br><span class="line">          &lt;div class=<span class="string">&quot;ant-back-top-inner&quot;</span>&gt;</span><br><span class="line">            &lt;a-icon <span class="built_in">type</span>=<span class="string">&quot;up&quot;</span>&gt;&lt;/a-icon&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/a-back-top&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br></pre></td></tr></table></figure><p>这个target是一个函数，返回的是可滚动区域对象：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">backtop</span></span>() &#123;</span><br><span class="line">   <span class="built_in">return</span> document.querySelector(<span class="string">&quot;#contentC&quot;</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>这样BackTop的功能就生效了。</p><p>这里附上我使用的样式：</p><pre><code class="bash">#components-back-top-demo-custom .ant-back-top-inner &#123;  cursor: pointer;  height: 40px;  width: 40px;  line-height: 40px;  background-color: #61AFEF;  font-size: 20px;  border-radius: 50%;  color: #fff;  text-align: center;  float: right;   bottom: 8em;  right: -2em;  position: relative;&#125;#components-back-top-demo-custom .ant-back-top-inner:hover &#123;  background-color: #6ED69F;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Ant Design Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue项目中使用分享插件social-share</title>
      <link href="/2022/10/08/vue19/"/>
      <url>/2022/10/08/vue19/</url>
      
        <content type="html"><![CDATA[<p>老规矩先安装依赖：</p><blockquote><p>cnpm install vue-social-share -S</p></blockquote><p>安装完后从main.js中引入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import Share from <span class="string">&#x27;vue-social-share&#x27;</span></span><br><span class="line">import <span class="string">&#x27;vue-social-share/dist/client.css&#x27;</span>;</span><br><span class="line">Vue.use(Share)</span><br></pre></td></tr></table></figure><span id="more"></span><p>最后在页面中使用了：</p><blockquote><p><share :config="config"></share></p></blockquote><p>以上的config是插件的常用配置，是一个对象，其属性有以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">config: &#123;</span><br><span class="line">        url: <span class="string">&quot;&quot;</span>, // 网址，默认使用 window.location.href</span><br><span class="line">        <span class="built_in">source</span>: <span class="string">&quot;&quot;</span>, // 来源（QQ空间会用到）, 默认读取<span class="built_in">head</span>标签：&lt;meta name=<span class="string">&quot;site&quot;</span> content=<span class="string">&quot;http://overtrue&quot;</span> /&gt;</span><br><span class="line">        title: <span class="string">&quot;&quot;</span>, // 标题，默认读取 document.title 或者 &lt;meta name=<span class="string">&quot;title&quot;</span> content=<span class="string">&quot;share.js&quot;</span> /&gt;</span><br><span class="line">        description: <span class="string">&quot;&quot;</span>, // 描述, 默认读取<span class="built_in">head</span>标签：&lt;meta name=<span class="string">&quot;description&quot;</span> content=<span class="string">&quot;PHP弱类型的实现原理分析&quot;</span> /&gt;</span><br><span class="line">        image: <span class="string">&quot;&quot;</span>, // 图片, 默认取网页中第一个img标签</span><br><span class="line">        sites: [</span><br><span class="line">          <span class="string">&quot;qzone&quot;</span>,</span><br><span class="line">          <span class="string">&quot;qq&quot;</span>,</span><br><span class="line">          <span class="string">&quot;weibo&quot;</span>,</span><br><span class="line">          <span class="string">&quot;wechat&quot;</span>,</span><br><span class="line">          <span class="string">&quot;douban&quot;</span>,</span><br><span class="line">          <span class="string">&quot;tencent&quot;</span>,</span><br><span class="line">          <span class="string">&quot;linkedin&quot;</span>,</span><br><span class="line">          <span class="string">&quot;google&quot;</span>,</span><br><span class="line">          <span class="string">&quot;facebook&quot;</span>,</span><br><span class="line">          <span class="string">&quot;twitter&quot;</span>,</span><br><span class="line">        ], // 启用的站点</span><br><span class="line">        disabled: [</span><br><span class="line">          <span class="string">&quot;qzone&quot;</span>,</span><br><span class="line">          <span class="string">&quot;qq&quot;</span>,</span><br><span class="line">          <span class="string">&quot;tencent&quot;</span>,</span><br><span class="line">          <span class="string">&quot;douban&quot;</span>,</span><br><span class="line">          <span class="string">&quot;linkedin&quot;</span>,</span><br><span class="line">          <span class="string">&quot;google&quot;</span>,</span><br><span class="line">          <span class="string">&quot;facebook&quot;</span>,</span><br><span class="line">          <span class="string">&quot;twitter&quot;</span>,</span><br><span class="line">        ], // 禁用的站点</span><br><span class="line">        wechatQrcodeTitle: <span class="string">&quot;微信扫一扫：分享&quot;</span>, // 微信二维码提示文字</span><br><span class="line">        wechatQrcodeHelper:</span><br><span class="line">          <span class="string">&quot;&lt;p&gt;微信里点“发现”，扫一下&lt;/p&gt;&lt;p&gt;二维码便可将本文分享至朋友圈。&lt;/p&gt;&quot;</span>,</span><br><span class="line">      &#125;,</span><br></pre></td></tr></table></figure><p>使用后我们会发现页面中图标并没有完整的呈现</p><p>看下网页css代码的引用路径发现问题点在于样式中字体的引用路径是绝对路径，</p><p>我们需要调整为当前相对路径，具体的做法是：</p><blockquote><p>修改node_modules下文件夹:vue-social-share&gt;dist&gt;client.css 文件中将顶部“@font-face”中 url中的“&#x2F;static”改为“.&#x2F;static”</p></blockquote><p>这样就能正确显示图标了。</p><p>当然了由于一般代码是不会对node_modules上传管控的，这就意味着，每次新download下载，都要自己去改以下，这就有一定的局限性，不方便嘛。</p><p>为了规避此弊端，我们可以将client.css下载到本地，再将client.css里面引入的图标文件（刚刚调整的那几个）复制到src下面的static文件下，这样就可以一次性修改样式表里的路径了。</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> social-share </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中实现页面刷新的几种方式</title>
      <link href="/2022/10/08/vue18/"/>
      <url>/2022/10/08/vue18/</url>
      
        <content type="html"><![CDATA[<p>1.原页面刷新，类似于F5</p><blockquote><p>this.$router.go(0)<br>或者<br>location.reload()</p></blockquote><p>2.创建一个空白页面（blank.vue），通过路由的方式先跳转到空白页面再跳转回来</p><span id="more"></span><blockquote><p>this.$router.replace({ path:’&#x2F;blank’ })</p></blockquote><p>3.使用inject &#x2F; provide组合控制显示</p><p>方法1和2的刷新是比较传统的动态刷新，整个页面会出现停顿和白屏，体验感不好。</p><p>推荐使用方法3，类似于静态刷新。</p><p>(1）添加：provide</p><p>1）在路由容器（一般是在App.vue 页面中）router-view添加：v-if&#x3D;”isRouterAlive”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive&gt;</span><br><span class="line">                        &lt;router-view</span><br><span class="line">                          :key=<span class="string">&quot;<span class="variable">$route</span>.fullPath&quot;</span></span><br><span class="line">                          v-if=<span class="string">&quot;isRouterAlive&quot;</span></span><br><span class="line">                        &gt;&lt;/router-view&gt;</span><br><span class="line">                      &lt;/keep-alive&gt;</span><br></pre></td></tr></table></figure><p>2）在data函数中添加：isRouterAlive: true,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> &#123;</span><br><span class="line">      isRouterAlive: <span class="literal">true</span>,</span><br><span class="line">      leftheight: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      csscenter: &#123;</span><br><span class="line">        height: this.leftheight,</span><br><span class="line">      &#125;,</span><br><span class="line">      slideTop: <span class="literal">true</span>,</span><br><span class="line">      backgroundDiv: &#123;</span><br><span class="line">        // backgroundImage: <span class="string">&quot;url(&quot;</span> + require(<span class="string">&quot;../static/img/n3.jpg&quot;</span>) + <span class="string">&quot;)&quot;</span>,</span><br><span class="line">        backgroundRepeat: <span class="string">&quot;no-repeat&quot;</span>,</span><br><span class="line">        backgroundSize: <span class="string">&quot;110% 100%&quot;</span>,</span><br><span class="line">        backgroundAttachment: <span class="string">&quot;fixed&quot;</span>,</span><br><span class="line">        backgroundposition: <span class="string">&quot;left&quot;</span>,</span><br><span class="line">        // filter: <span class="string">&quot;grayscale(10%)&quot;</span>,</span><br><span class="line">        //  filter: <span class="string">&quot;blur(1px)&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>  3)添加一个provide类型，内容如下：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="title">provide</span></span>() &#123;</span><br><span class="line">  <span class="built_in">return</span> &#123;</span><br><span class="line">    reload: this.reload,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><br>  4)在method方法中添加以下内容：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line">      this.isRouterAlive = <span class="literal">false</span>; //先关闭，</span><br><span class="line">      this.<span class="variable">$nextTick</span>(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        console.log(<span class="string">&#x27;inject&#x27;</span>);</span><br><span class="line">        this.isRouterAlive = <span class="literal">true</span>; //再打开</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">```      </span><br><span class="line">(2)引用：inject</span><br><span class="line"></span><br><span class="line">在需要刷新的页面注入inject</span><br><span class="line">&#123;% blockquote %&#125;</span><br><span class="line">inject: [<span class="string">&quot;reload&quot;</span>]</span><br><span class="line">this.reload();</span><br><span class="line">&#123;% endblockquote %&#125;</span><br><span class="line">使用范例：</span><br><span class="line">```bash</span><br><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">  inject: [<span class="string">&quot;reload&quot;</span>],</span><br><span class="line">  <span class="function"><span class="title">beforeCreate</span></span>() &#123;</span><br><span class="line">    window.setTimeout(() =&gt; &#123;</span><br><span class="line">      this.orderlist1 = JSON.parse(sessionStorage.getItem(<span class="string">&quot;orderlist1&quot;</span>));</span><br><span class="line">      this.orderlist2 = JSON.parse(sessionStorage.getItem(<span class="string">&quot;orderlist2&quot;</span>));</span><br><span class="line">      this.showinfo();      </span><br><span class="line">    &#125;, 500);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">created</span></span>() &#123;</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">      this.reload();</span><br><span class="line">    &#125;, 2000);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这里做了一个延迟刷新，因为是静态的，为了验证是否起到作用，可以在relolad()方法中打印有一些标识信息；</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中使用AOS动画插件，让你的网页更酷炫</title>
      <link href="/2022/10/08/vue17/"/>
      <url>/2022/10/08/vue17/</url>
      
        <content type="html"><![CDATA[<p>根据官方文档，使用此插件可以通过直接引用的方式，也可以是下载安装本地包；<br>1.直接使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://unpkg.com/aos@next/dist/aos.css&quot;</span>/&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;https://unpkg.com/aos@next/dist/aos.js”</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">AOS.init();</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>这种引入方式如果是在Vue项目中，自然是从首页（index.html）中引入。</p><span id="more"></span><p>2.npm或者yarn安装</p><p>Vue项目自然是推荐这种方式</p><blockquote><p>npm install –save aos@next</p><p>or<br>yarn add aos@next</p></blockquote><p>然后在main.js引入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import AOS from <span class="string">&#x27;aos&#x27;</span>;</span><br><span class="line">import <span class="string">&#x27;aos/dist/aos.css&#x27;</span></span><br><span class="line">AOS.init();</span><br></pre></td></tr></table></figure><p>以上AOS.init()  实际上是默认了以下配置（详细功能配置可查看官方文档）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">AOS.init(&#123;</span><br><span class="line">  // Global settings:</span><br><span class="line">  <span class="built_in">disable</span>: <span class="literal">false</span>, // accepts following values: <span class="string">&#x27;phone&#x27;</span>, <span class="string">&#x27;tablet&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>, boolean, expression or <span class="keyword">function</span></span><br><span class="line">  startEvent: <span class="string">&#x27;DOMContentLoaded&#x27;</span>, // name of the event dispatched on the document, that AOS should initialize on</span><br><span class="line">  initClassName: <span class="string">&#x27;aos-init&#x27;</span>, // class applied after initialization</span><br><span class="line">  animatedClassName: <span class="string">&#x27;aos-animate&#x27;</span>, // class applied on animation</span><br><span class="line">  useClassNames: <span class="literal">false</span>, // <span class="keyword">if</span> <span class="literal">true</span>, will add content of `data-aos` as classes on scroll</span><br><span class="line">  disableMutationObserver: <span class="literal">false</span>, // disables automatic mutations<span class="string">&#x27; detections (advanced)</span></span><br><span class="line"><span class="string">  debounceDelay: 50, // the delay on debounce used while resizing window (advanced)</span></span><br><span class="line"><span class="string">  throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:</span></span><br><span class="line"><span class="string">  offset: 120, // offset (in px) from the original trigger point</span></span><br><span class="line"><span class="string">  delay: 0, // values from 0 to 3000, with step 50ms</span></span><br><span class="line"><span class="string">  duration: 400, // values from 0 to 3000, with step 50ms</span></span><br><span class="line"><span class="string">  easing: &#x27;</span>ease<span class="string">&#x27;, // default easing for AOS animations</span></span><br><span class="line"><span class="string">  once: false, // whether animation should happen only once - while scrolling down</span></span><br><span class="line"><span class="string">  mirror: false, // whether elements should animate out while scrolling past them</span></span><br><span class="line"><span class="string">  anchorPlacement: &#x27;</span>top-bottom<span class="string">&#x27;, // defines which position of the element regarding to window should trigger the animation</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><p>接下来就是如何在网页中实现功能渲染了。</p><p>不得不说还是挺简单的：只要将特性绑定到控件上即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div</span><br><span class="line">   <span class="built_in">id</span>=<span class="string">&quot;blog_left&quot;</span></span><br><span class="line">   class=<span class="string">&quot;csleft&quot;</span></span><br><span class="line">   data-aos=<span class="string">&quot;slide-down&quot;</span></span><br><span class="line">   data-aos-duration=<span class="string">&quot;1500&quot;</span></span><br><span class="line">   data-aos-easing=<span class="string">&quot;ease-in-out&quot;</span></span><br><span class="line">   data-aos-mirror=<span class="string">&quot;true&quot;</span></span><br><span class="line">   data-aos-once=<span class="string">&quot;false&quot;</span></span><br><span class="line">   data-aos-anchor-placement=<span class="string">&quot;top-center&quot;</span></span><br><span class="line"> &gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>  这样一个初始化1500ms的下拉做菜单动画效果就完成。</p><p>当然了这是比较简单的用法，更酷炫的用法参考官方文档结合自己的项目去实现咯。</p><p>这里附上常用的属性（特效名、锚点位置、缓动方法）：</p><h3 id="Animations"><a href="#Animations" class="headerlink" title="Animations"></a>Animations</h3><h2 id="Fade-animations"><a href="#Fade-animations" class="headerlink" title="Fade animations"></a>Fade animations</h2><p>fade<br>fade-up<br>fade-down<br>fade-left<br>fade-right<br>fade-up-right<br>fade-up-left<br>fade-down-right<br>fade-down-left</p><h2 id="Flip-animations"><a href="#Flip-animations" class="headerlink" title="Flip animations"></a>Flip animations</h2><p>flip-up<br>flip-down<br>flip-left<br>flip-right</p><h2 id="Slide-animations"><a href="#Slide-animations" class="headerlink" title="Slide animations"></a>Slide animations</h2><p>slide-up<br>slide-down<br>slide-left<br>slide-right</p><h2 id="Zoom-animations"><a href="#Zoom-animations" class="headerlink" title="Zoom animations"></a>Zoom animations</h2><p>zoom-in<br>zoom-in-up<br>zoom-in-down<br>zoom-in-left<br>zoom-in-right<br>zoom-out<br>zoom-out-up<br>zoom-out-down<br>zoom-out-left<br>zoom-out-right</p><h3 id="Anchor-placements"><a href="#Anchor-placements" class="headerlink" title="Anchor placements"></a>Anchor placements</h3><p>top-bottom<br>top-center<br>top-top<br>center-bottom<br>center-center<br>center-top<br>bottom-bottom<br>bottom-center<br>bottom-top</p><h3 id="Easing-functions"><a href="#Easing-functions" class="headerlink" title="Easing functions"></a>Easing functions</h3><p>linear<br>ease<br>ease-in<br>ease-out<br>ease-in-out<br>ease-in-back<br>ease-out-back<br>ease-in-out-back<br>ease-in-sine<br>ease-out-sine<br>ease-in-out-sine<br>ease-in-quad<br>ease-out-quad<br>ease-in-out-quad<br>ease-in-cubic<br>ease-out-cubic<br>ease-in-out-cubic<br>ease-in-quart<br>ease-out-quart<br>ease-in-out-quart</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> AOS动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ant Design Vue icon 图标的使用方法</title>
      <link href="/2022/10/08/vue16/"/>
      <url>/2022/10/08/vue16/</url>
      
        <content type="html"><![CDATA[<p>先看<a href="https://2x.antdv.com/components/icon-cn" title="" target="">官方文档</a><br>直接点击Outlined栏相应的图标会自动将图标名称复制到你的剪切板上,这里我们点击一个类似菜单的图标：<menu-fold-outlined /></p><p>通常我们会这样去使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-icon <span class="built_in">type</span>=<span class="string">&quot;menu-fold-outlined&quot;</span>&gt;&lt;/a-icon&gt;</span><br></pre></td></tr></table></figure><p>但是并不会显示出来</p><p>正确的用法应该是：我们在调用的时候标签要去掉分类词</p><span id="more"></span><blockquote><p>标签去除Oulined、TwoTone、Filled,首字母小写，后续大写字母转小写并加-</p></blockquote><p>所以刚刚的那个标签应该这么用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-icon <span class="built_in">type</span>=<span class="string">&quot;menu-fold&quot;</span>&gt;&lt;/a-icon&gt;</span><br></pre></td></tr></table></figure><p>官方下面文档上没见到有提示，这里写给大家避避坑。</p><p>当然更高级的用法使用的时候也可以像官方文档写的一样，通过components传值：这样可以不用去掉‘分类词’直接用了。</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Ant Design Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ant Design Vue 菜单（Menu）的用法介绍</title>
      <link href="/2022/10/08/vue15/"/>
      <url>/2022/10/08/vue15/</url>
      
        <content type="html"><![CDATA[<h4> 根据：<a href="https://2x.antdv.com/components/menu-cn" title="" target="">Ant DesiGN Vue 官网</a> 文档，常用属性参考如下：</h4><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-menu</span><br><span class="line">      mode=<span class="string">&quot;horizontal&quot;</span></span><br><span class="line">      triggerSubMenuAction=<span class="string">&quot;click&quot;</span></span><br><span class="line">      :overflowedIndicator=<span class="string">&quot;hideico&quot;</span></span><br><span class="line">    &gt;</span><br><span class="line">      &lt;a-menu-item @click=<span class="string">&quot;removekind()&quot;</span>&gt;</span><br><span class="line">        &lt;img class=<span class="string">&quot;loginimg&quot;</span> v-bind:src=<span class="string">&quot;headimg&quot;</span> alt=<span class="string">&quot;&quot;</span> /&gt;</span><br><span class="line">      &lt;a-menu-item&gt;</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">          &lt;audio</span><br><span class="line">            style=<span class="string">&quot;height: 0px; width: 0px&quot;</span></span><br><span class="line">            <span class="built_in">id</span>=<span class="string">&quot;audio&quot;</span></span><br><span class="line">            ref=<span class="string">&quot;audio&quot;</span></span><br><span class="line">            controls</span><br><span class="line">            muted</span><br><span class="line">            :src=<span class="string">&quot;musicsrc&quot;</span></span><br><span class="line">            <span class="built_in">type</span>=<span class="string">&quot;audio/mpeg&quot;</span></span><br><span class="line">          &gt;&lt;/audio&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">        &lt;i</span><br><span class="line">          class=<span class="string">&quot;el-icon-caret-left&quot;</span></span><br><span class="line">          @click=<span class="string">&quot;musicplay(2)&quot;</span></span><br><span class="line">          style=<span class="string">&quot;color: white; margin-right: 1em&quot;</span></span><br><span class="line">        &gt;&lt;/i&gt;</span><br><span class="line">        &lt;i</span><br><span class="line">          class=<span class="string">&quot;el-icon-headset&quot;</span></span><br><span class="line">          @click=<span class="string">&quot;musicplay(0)&quot;</span></span><br><span class="line">          style=<span class="string">&quot;color: white; margin-right: 1em&quot;</span></span><br><span class="line">        &gt;&lt;/i&gt;</span><br><span class="line">        &lt;i</span><br><span class="line">          class=<span class="string">&quot;el-icon-caret-right&quot;</span></span><br><span class="line">          @click=<span class="string">&quot;musicplay(1)&quot;</span></span><br><span class="line">          style=<span class="string">&quot;color: white; margin-right: 1em&quot;</span></span><br><span class="line">        &gt;&lt;/i&gt;</span><br><span class="line">        &lt;span v-text=<span class="string">&quot;musicname&quot;</span> class=<span class="string">&quot;musicname&quot;</span>&gt;&lt;/span&gt;</span><br><span class="line">      &lt;/a-menu-item&gt;</span><br><span class="line">      &lt;a-menu-item&gt;</span><br><span class="line">        &lt;a-switch</span><br><span class="line">          checked-children=<span class="string">&quot;Light&quot;</span></span><br><span class="line">          un-checked-children=<span class="string">&quot;Dark&quot;</span></span><br><span class="line">          default-checked</span><br><span class="line">          @click=<span class="string">&quot;toggleDark&quot;</span></span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/a-menu-item&gt;</span><br><span class="line">      &lt;a-menu-item @click=<span class="string">&quot;writeblog()&quot;</span>&gt;</span><br><span class="line">        &lt;i class=<span class="string">&quot;el-icon-edit-outline&quot;</span>&gt;&lt;/i&gt;&lt;span&gt; 文章发布&lt;/span&gt;</span><br><span class="line">      &lt;/a-menu-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;a-menu-item @click=<span class="string">&quot;writemessage()&quot;</span>&gt;</span><br><span class="line">        &lt;i class=<span class="string">&quot;el-icon-position&quot;</span>&gt; &lt;/i&gt;</span><br><span class="line">        &lt;span class=<span class="string">&quot;csdot&quot;</span>&gt; 留言板块&lt;/span&gt;</span><br><span class="line">      &lt;/a-menu-item&gt;</span><br><span class="line">      &lt;a-menu-item&gt;</span><br><span class="line">        &lt;a-input-search</span><br><span class="line">          <span class="built_in">id</span>=<span class="string">&quot;searchtxt&quot;</span></span><br><span class="line">          clearable</span><br><span class="line">          placeholder=<span class="string">&quot;Search...&quot;</span></span><br><span class="line">          @search=<span class="string">&quot;onSearch&quot;</span></span><br><span class="line">          class=<span class="string">&quot;border_radius1&quot;</span></span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/a-menu-item&gt;</span><br><span class="line">    &lt;/a-menu&gt;</span><br></pre></td></tr></table></figure><p>mode:为菜单的呈现方式有3个</p><blockquote><p>vertical：竖直【默认】</p><p>horizontal：水平</p><p>inline：内联</p></blockquote><p>theme：主题颜色(light&#x2F;dark)2种，其中默认为： light</p><p>multiple：菜单是否可多选，默认为：false</p><p>selectedKeys(v-model)：当前选中菜单key集合</p><p>style：菜单的样式</p><p>defaultOpenKeys：初始展开菜单key集合</p><p>defaultSelectedKeys：初始选中菜单key集合</p><p>triggerSubMenuAction：导航栏缩放时的图标样式（默认为3个黑色的小圆点）</p><p>使用方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:overflowedIndicator=<span class="string">&quot;hideico&quot;</span></span><br></pre></td></tr></table></figure><p>对应的hideico为一个slot样式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span></span>() &#123;</span><br><span class="line">   <span class="built_in">return</span> &#123;</span><br><span class="line">     headimg: <span class="string">&quot;/static/img/head1.png&quot;</span>,</span><br><span class="line">     musicname: <span class="string">&quot;正在播放:无&quot;</span>,</span><br><span class="line">     palyflag: <span class="literal">false</span>,</span><br><span class="line">     musicindex: 0,</span><br><span class="line">     musicsrc: require(<span class="string">&quot;../assets/music/烟花再美也不及你-三暮雨.mp3&quot;</span>),</span><br><span class="line">     userinfo: &#123; account: <span class="string">&quot;&quot;</span>, password: <span class="string">&quot;&quot;</span> &#125;,</span><br><span class="line">     SelfSearch: <span class="string">&quot;&quot;</span>,</span><br><span class="line">     Islogin: <span class="literal">false</span>,</span><br><span class="line">     dialogFormVisible: <span class="literal">false</span>,</span><br><span class="line">     hideico:&lt;i class=<span class="string">&#x27;el-icon-s-fold&#x27;</span> style=<span class="string">&#x27;border:1px solid white;&#x27;</span>&gt;&lt;/i&gt;</span><br><span class="line">   &#125;;</span><br></pre></td></tr></table></figure><p>这里用的是elementui的一个图标，如果是Ant Design Vue 的icon就是：</p><pre><code class="bash">hideico:&quot;&lt;a-icon type=&#39;menu&#39; /&gt;&quot;</code></pre>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Ant Design Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中引入highlight.js实现代码高亮，兼容IE</title>
      <link href="/2022/10/08/vue14/"/>
      <url>/2022/10/08/vue14/</url>
      
        <content type="html"><![CDATA[<p>【方案一】</p><p>根据highlight.js官网的介绍，我们在main.js文件中通过import的方式引入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import hljs from <span class="string">&quot;highlight.js&quot;</span>;</span><br><span class="line">import <span class="string">&quot;highlight.js/styles/monokai-sublime.css&quot;</span>;</span><br><span class="line">Vue.use(hljs)</span><br></pre></td></tr></table></figure><p>这里用到了富文本框WandEditor，引入高亮；</p><blockquote><p>this.editor.highlight &#x3D; hljs</p></blockquote><p>以上测试环境和打包后在IE上都不兼容，其它浏览器正常运行；</p><span id="more"></span><p>尝试过使用Vue中兼容IE的用法：ranspileDependencies</p><blockquote><p>在项目根目录与package.json同级创建：Vue.config.js文件【这个文件创建后项目会自动识别，无需特别引入】，代码如下。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  transpileDependencies: [</span><br><span class="line">    /[/\\]node_modules[/\\](.+?)?highlight.js/,</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实测无效。</p><p>也试过从webpack下手，通过引入babel-profill</p><p>修改webpack.base.conf.js为以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">entry: &#123;</span><br><span class="line"></span><br><span class="line">    app: [<span class="string">&#x27;babel-polyfill&#x27;</span>, <span class="string">&#x27;./src/main.js&#x27;</span>],</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>module&gt;rules&gt;include</p><blockquote><p>include: [resolve(‘src’), resolve(‘test’), resolve(‘node_modules&#x2F;webpack-dev-server&#x2F;client’),resolve(‘node_modules&#x2F;highlight.js’)]</p></blockquote><p>完整文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;use strict&#x27;</span></span><br><span class="line">var webpack = require(<span class="string">&quot;webpack&quot;</span>)</span><br><span class="line">const path = require(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line">const utils = require(<span class="string">&#x27;./utils&#x27;</span>)</span><br><span class="line">const config = require(<span class="string">&#x27;../config&#x27;</span>)</span><br><span class="line">const vueLoaderConfig = require(<span class="string">&#x27;./vue-loader.conf&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> resolve(<span class="built_in">dir</span>) &#123;</span><br><span class="line">  <span class="built_in">return</span> path.join(__dirname, <span class="string">&#x27;..&#x27;</span>, <span class="built_in">dir</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line"></span><br><span class="line">  plugins: [</span><br><span class="line">    new webpack.ProvidePlugin(&#123;</span><br><span class="line">      jQuery: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line">      $: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  context: path.resolve(__dirname, <span class="string">&#x27;../&#x27;</span>),</span><br><span class="line">  // entry: &#123;</span><br><span class="line">  //   app: <span class="string">&#x27;./src/main.js&#x27;</span>,</span><br><span class="line">  // &#125;,</span><br><span class="line">  entry: &#123;</span><br><span class="line">    app: [<span class="string">&#x27;babel-polyfill&#x27;</span>, <span class="string">&#x27;./src/main.js&#x27;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: config.build.assetsRoot,</span><br><span class="line">    filename: <span class="string">&#x27;[name].js&#x27;</span>,</span><br><span class="line">    publicPath: process.env.NODE_ENV === <span class="string">&#x27;production&#x27;</span> ?</span><br><span class="line">      config.build.assetsPublicPath : config.dev.assetsPublicPath</span><br><span class="line">  &#125;,</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    extensions: [<span class="string">&#x27;.js&#x27;</span>, <span class="string">&#x27;.vue&#x27;</span>, <span class="string">&#x27;.json&#x27;</span>],</span><br><span class="line">    <span class="built_in">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;vue$&#x27;</span>: <span class="string">&#x27;vue/dist/vue.esm.js&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: resolve(<span class="string">&#x27;src&#x27;</span>),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [&#123;</span><br><span class="line">        <span class="built_in">test</span>: /\.vue$/,</span><br><span class="line">        loader: <span class="string">&#x27;vue-loader&#x27;</span>,</span><br><span class="line">        options: vueLoaderConfig</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">test</span>: /\.js$/,</span><br><span class="line">        loader: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">        include: [resolve(<span class="string">&#x27;src&#x27;</span>), resolve(<span class="string">&#x27;test&#x27;</span>), resolve(<span class="string">&#x27;node_modules/webpack-dev-server/client&#x27;</span>),resolve(<span class="string">&#x27;node_modules/highlight.js&#x27;</span>)]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">test</span>: /\.(png|jpe?g|gif|svg)(\?.*)?$/,</span><br><span class="line">        loader: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          <span class="built_in">limit</span>: 10000,</span><br><span class="line">          name: utils.assetsPath(<span class="string">&#x27;img/[name].[hash:7].[ext]&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">test</span>: /\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/,</span><br><span class="line">        loader: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          <span class="built_in">limit</span>: 10000,</span><br><span class="line">          name: utils.assetsPath(<span class="string">&#x27;media/[name].[hash:7].[ext]&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">test</span>: /\.(woff2?|eot|ttf|otf)(\?.*)?$/,</span><br><span class="line">        loader: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          <span class="built_in">limit</span>: 10000,</span><br><span class="line">          name: utils.assetsPath(<span class="string">&#x27;fonts/[name].[hash:7].[ext]&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  node: &#123;</span><br><span class="line">    // prevent webpack from injecting useless setImmediate polyfill because Vue</span><br><span class="line">    // <span class="built_in">source</span> contains it (although only uses it <span class="keyword">if</span> it<span class="string">&#x27;s native).</span></span><br><span class="line"><span class="string">    setImmediate: false,</span></span><br><span class="line"><span class="string">    // prevent webpack from injecting mocks to Node native modules</span></span><br><span class="line"><span class="string">    // that does not make sense for the client</span></span><br><span class="line"><span class="string">    dgram: &#x27;</span>empty<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    fs: &#x27;</span>empty<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    net: &#x27;</span>empty<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    tls: &#x27;</span>empty<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    child_process: &#x27;</span>empty<span class="string">&#x27;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>亲测无效。<br>【方案二】</p><p>通过require的方式引入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">created</span></span>() &#123;</span><br><span class="line">   this.kind = JSON.parse(sessionStorage.getItem(<span class="string">&quot;orderlist2&quot;</span>));</span><br><span class="line">   <span class="keyword">if</span> (!this.isie) &#123;</span><br><span class="line">     console.log(<span class="string">&quot;不是ie&quot;</span>);</span><br><span class="line">     this.hljs = require(<span class="string">&quot;highlight.js&quot;</span>);</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     console.log(<span class="string">&quot;是ie&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><p>原本想的是IE浏览器不引入js，发布信息在Chrome等高亮功能正常的浏览器上，这样IE浏览器也能正常访问；</p><p>这样在wangEditor配置信息中：</p><blockquote><p>if (this.hljs !&#x3D; null) this.editor.highlight &#x3D; this.hljs;</p></blockquote><p>起初，以为这种方案在本地是可行的，因为IE浏览器能正常访问网站，Chrome浏览器也能使用代码高亮的功能；</p><p>但是一旦打包到线上就同“方案一”一样，不兼容IE；</p><p>查阅资料后得知：</p><blockquote><p>require只能用在node里面，前端之所以能用，是因为我们引用了require.js插件来辅助；</p><p>require不是前端语法，打包的时候会被编译；</p></blockquote><p>也就是说只要打包，就会编译对应的js模块。</p><p>方案二扑街。<br>【方案三】<br>在main.js中补充以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(<span class="string">&#x27;highlight&#x27;</span>, <span class="keyword">function</span> (el) &#123;</span><br><span class="line">  <span class="built_in">let</span> blocks = el.querySelectorAll(<span class="string">&#x27;pre code&#x27;</span>);</span><br><span class="line">  blocks.forEach((block) =&gt; &#123;</span><br><span class="line">    hljs.highlightBlock(block)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在从index.html中引入相应的js和css</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">link</span> href=<span class="string">&quot;http://apps.bdimg.com/libs/highlight.js/9.1.0/styles/default.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;http://apps.bdimg.com/libs/highlight.js/9.1.0/highlight.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>以上css和js可以在IE中打开下载到本地，以静态资源引入更容易管控（避免官网网络影响）；</p><p>然后在需要代码高亮的地方绑定一个特性：v-highlight</p><p>这里由于我用到了wangEditor富文本框，所以实现方法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-row</span><br><span class="line">       &gt;&lt;el-col&gt;</span><br><span class="line">         &lt;el-form-item label=<span class="string">&quot;博客内容&quot;</span> required&gt;</span><br><span class="line">           &lt;el-row</span><br><span class="line">             &gt;&lt;el-col&gt; &lt;div <span class="built_in">id</span>=<span class="string">&quot;editor&quot;</span> v-highlight&gt;&lt;/div&gt; &lt;/el-col</span><br><span class="line">           &gt;&lt;/el-row&gt;</span><br><span class="line">         &lt;/el-form-item&gt; &lt;/el-col</span><br><span class="line">     &gt;&lt;/el-row&gt;</span><br></pre></td></tr></table></figure><p>同时，富文本框中的配置为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">this.editor.config.onchange = (html) =&gt; &#123;        </span><br><span class="line">       this.info_ = html; // 绑定当前逐渐地值</span><br><span class="line">       this.<span class="variable">$emit</span>(<span class="string">&quot;change&quot;</span>, html); // 将内容同步到父组件中</span><br><span class="line">     &#125;;</span><br></pre></td></tr></table></figure><p>【附录】</p><p>1.其它特性或样式用法参照官网；<br>2.这里方案三绑定了富文本框，输入源码后并不会里面呈现高亮效果，需要在其它文本框点击后才能触发；在IE中效果不会生效，但是从Chrome等其它浏览器生成高亮样式的文章后，从IE刷新是可以看到效果的，所以IE网站是可以正常访问浏览的。</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Vue中引入静态图片</title>
      <link href="/2022/10/08/vue13/"/>
      <url>/2022/10/08/vue13/</url>
      
        <content type="html"><![CDATA[<p>1.将图片放在assets或其某文件下</p><p>2.通过以下两种方法引入</p><p>1).import  img1 from ‘..&#x2F;assets&#x2F;images&#x2F;img1.jpg’</p><p>在data中定义地址变量：pic:img1</p><p>2)直接在data中通过require引入:</p><p>pic: require(“..&#x2F;assets&#x2F;images&#x2F;img1.jpg”) </p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visual Studio Code常用的扩展插件</title>
      <link href="/2022/10/08/vue12/"/>
      <url>/2022/10/08/vue12/</url>
      
        <content type="html"><![CDATA[<ol><li><p>Vetur<br>vue 代码?亮插件,vue开发神器</p></li><li><p>Auto Close Tag<br>html?动闭合标签插件</p></li><li><p>Beautify<br>格式化插件</p></li><li><p>Chinese (Simplified) vscode<br>汉化插件</p><span id="more"></span></li><li><p>Code Runner<br>在编辑器?运?js代码，同时可在terminal?显?打印结果的?具【?便调试代码,?持多种语??如 C++, Python, Java等等】</p></li><li><p>Git History<br>git ?具，?标定位到代码?上，可以在代码后边显?代码最近修改时间及修改?等信息</p></li><li><p>Git Project Manager<br>git 项?管理?具</p></li><li><p>GitLens — Git supercharged<br>git ?具，作?和 Git History 类似</p></li><li><p>HTML Snippets<br>快速?成html代码?具</p></li><li><p>Live Server<br>快速启动?个本地服务，?便html?件预览调试等</p></li><li><p>npm Intellisense<br>快速引?依赖插件</p></li><li><p>Path Autocomplete<br>路径提?插件</p></li><li><p>Prettier - Code formatter<br>代码格式化插件</p></li><li><p>Visual Studio IntelliCode<br>代码智能补全插件</p></li><li><p>Vue Theme<br>vue 代码主题插件</p></li><li><p>Vue VSCode Snippets<br>快速?成vue代码插件</p></li><li><p>vscode wxml</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue的生命周期</title>
      <link href="/2022/10/08/vue11/"/>
      <url>/2022/10/08/vue11/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是Vue的生命周期-？"><a href="#什么是Vue的生命周期-？" class="headerlink" title="什么是Vue的生命周期 ？"></a>什么是Vue的生命周期 ？</h3><blockquote><p>Vue 的实例从创建到销毁的过程 ，就是生命周期 ，也就是从开始创建 ，初始化数据 ，编译模板 ，挂载Dom到渲染DOM ，更新数据再到渲染 ，卸载等一系列的过程 ，我们称这是Vue的生命周期。</p></blockquote><span id="more"></span><p>每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等。同时在这个过程中也会运行一些叫做生命周期钩子的函数，这给了用户在不同阶段添加自己的代码的机会。</p><blockquote><p>从创建到销毁顺序执行的生命周期函数 :beforeCreate、created、 beforeMount、mounted、beforeUpdate、 updated、beforeDestroy、destroyed<br>而这些Vue生命周期过程中会伴随着一些函数的自调用。我们称这些函数为钩子函数。</p></blockquote><h3 id="Vue生命周期的作用是什么？"><a href="#Vue生命周期的作用是什么？" class="headerlink" title="Vue生命周期的作用是什么？"></a>Vue生命周期的作用是什么？</h3><p>Vue生命周期过程中会伴随着多个事件钩子 ，这些钩子函数让我们在控制整个Vue实例的过程时更容易形成好的逻辑<br>Vue生命周期总共分8个阶段：创建前&#x2F;后 ，载入前&#x2F;后 ，更新前&#x2F;后 ，销毁前&#x2F;后</p><p>各个生命周期函数的作用：</p><h2 id="创建前-x2F-后-beforeCreate-x2F-created"><a href="#创建前-x2F-后-beforeCreate-x2F-created" class="headerlink" title="创建前&#x2F;后(beforeCreate &#x2F; created)"></a>创建前&#x2F;后(beforeCreate &#x2F; created)</h2><blockquote><p>在beforeCreate阶段 ，vue实例的挂载元素el和数据对象data都为undefined ，还未初始化 ，也就是说此时我们还拿不到数据</p><p>在created阶段 ，vue实例的数据对象data有了 ，但是实例对象el还没有 ，也就是说可以拿到数据 ，但是无法获取Dom节点 ，此时data 和 methods已经可以使用 但是页面还没有渲染出来</p><p>created阶段data有了才能拿到数据</p><p>所以我们在开发中 ，的一些获取数据的逻辑都可以写在created钩子函数中</p></blockquote><h2 id="载入前-x2F-后-（beforeMount-x2F-mounted）"><a href="#载入前-x2F-后-（beforeMount-x2F-mounted）" class="headerlink" title="载入前&#x2F;后 （beforeMount &#x2F; mounted）"></a>载入前&#x2F;后 （beforeMount &#x2F; mounted）</h2><blockquote><p>在beforeMount阶段 ，vue实例的$el和data都初始化了 ，但还是挂载之前的虚拟DOM节点 ，此时实例尚未挂载完成 ，此时页面上还看不到真实数据 只是一个模板页面而已</p><p>在mounted阶段 ，vue实例挂载完成 ，页面成功渲染数据已经真实渲染到页面上 在这个钩子函数里面我们可以使用一些第三方的插件</p><p>mounted页面才真正渲染完成</p><p>created拿不到elDom节点<br>注意：在beforeMount阶段 可以拿到el实例但是只是挂载的el虚拟DOM节点 ，在mounted阶段 el被新创建的vm.$el替换，并挂载到实例上此时才能操作页面上的DOM元素。</p></blockquote><p><b>以上四个钩子函数都是在Vue生命周期过程中自动调用。</b></p><h2 id="更新前-x2F-后-（beforeUpdate-x2F-updated）"><a href="#更新前-x2F-后-（beforeUpdate-x2F-updated）" class="headerlink" title="更新前&#x2F;后 （beforeUpdate &#x2F; updated）"></a>更新前&#x2F;后 （beforeUpdate &#x2F; updated）</h2><blockquote><p>在beforeUpdate 阶段 ，数据更新时调用，发生在虚拟DOM打补丁之前 页面上数据还是旧的。</p><p>在updated阶段 ，由于数据更改导致的虚拟DOM重新渲染和打补丁，在这之后会调用该钩子。 页面上数据已经替换成最新的，只有在数据改变后才调用。</p></blockquote><h2 id="销毁前-x2F-后-（beforeDestroy-x2F-destroyed）"><a href="#销毁前-x2F-后-（beforeDestroy-x2F-destroyed）" class="headerlink" title="销毁前&#x2F;后 （beforeDestroy &#x2F; destroyed）"></a>销毁前&#x2F;后 （beforeDestroy &#x2F; destroyed）</h2><blockquote><p>beforeDestroy在实例销毁之前调用 ，在这一步，实例仍然完全可用。</p><p>destroyed 实例销毁后调用。该钩子被调用后，对应 Vue 实例的所有指令都被解绑，所有的事件监听器被移除，所有的子实例也都被销毁。</p></blockquote><p>页面第一次加载只会调用触发 beforeCreate created beforeMount mounted</p><p>每个阶段对应的钩子函数 ，我们都可以在其内部做一些对应的逻辑。</p><p>【常用钩子函数的运用场景】</p><p>【beforeCreate 】此时页面开始创建 ，可以加loading等事件</p><p>【created 】加载实列触发或 一些异步请求调用 ，loading结束等事件</p><p>【mounted 】获取Dom节点操作DOM ，在这个钩子函数里面我们可以使用一些第三方的插件实例写在这个函数内</p><p>【updated】 做一些数据统一更新处理的相应函数</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>axios中使用异步（async +await）</title>
      <link href="/2022/10/08/vue10/"/>
      <url>/2022/10/08/vue10/</url>
      
        <content type="html"><![CDATA[<p>1.定义方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">async <span class="keyword">function</span> getIteminfo(<span class="built_in">id</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">id</span> == null) <span class="built_in">id</span> = getPara();//获取页面参数</span><br><span class="line"></span><br><span class="line">    var item_options = [];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> await axios(&#123;</span><br><span class="line"></span><br><span class="line">        url: dev_proxyftpname + <span class="string">&quot;/api/findOneById&quot;</span>,</span><br><span class="line"></span><br><span class="line">        method: <span class="string">&quot;post&quot;</span>,</span><br><span class="line"></span><br><span class="line">        data: JSON.stringify(&#123; <span class="built_in">id</span>: <span class="built_in">id</span> &#125;),</span><br><span class="line"></span><br><span class="line">        headers: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span> &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="built_in">timeout</span>: 1000 * 30,</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">        .<span class="keyword">then</span>((res) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (res.data) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (res.data.data != null) &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">return</span> res.data.data;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>2.调用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">getIteminfo().<span class="keyword">then</span>(async res =&gt; &#123;</span><br><span class="line">         <span class="keyword">if</span> (res.articleTemplateId != null) &#123;</span><br><span class="line">             await getTemplates(res.articleTemplateId).<span class="keyword">then</span>(res =&gt; &#123;</span><br><span class="line">                 html += res.templateContent;</span><br><span class="line">                 $(<span class="string">&quot;.&quot;</span> + className).append(analysisHtml(html));</span><br><span class="line">             &#125;)</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">     &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中全局变量和全局函数的使用</title>
      <link href="/2022/10/08/vue9/"/>
      <url>/2022/10/08/vue9/</url>
      
        <content type="html"><![CDATA[<h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><p>1.直接在main.js中通过prototype定义</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.prototype.accessToken = <span class="string">&#x27;xxx&#x27;</span></span><br></pre></td></tr></table></figure><p>在页面中调用：this.accessToken<br>这种方法简单但是，当需要定义变量很多的时候，管理就很繁杂，这个时候就不宜使用。</p><span id="more"></span><p>2.定义一个通用js文件，在文件中定义通用变量（通过export default 暴露），最后引入（import）调用;</p><p>定义：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//universal.js</span><br><span class="line">const accessToken =<span class="string">&#x27;xxx&#x27;</span></span><br><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">accessToken , </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用（可以在需要的页面引入，也可以在main.js中引入）</p><p>（1）在需要的页面直接引入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;&#123; Token &#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import universal from <span class="string">&#x27;../universal&#x27;</span> // 引入模块</span><br><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line"><span class="function"><span class="title">data</span></span> () &#123;</span><br><span class="line"><span class="built_in">return</span> &#123;</span><br><span class="line">Token: universal.accessToken  //获取方法定义的变量</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>（2）从main.js中引入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import universal from <span class="string">&#x27;../universal&#x27;</span> // 引入模块</span><br><span class="line">Vue.prototype.universal = universal</span><br></pre></td></tr></table></figure><p>后在页面调用：this.universal.accessToken</p><h3 id="全局函数"><a href="#全局函数" class="headerlink" title="全局函数"></a>全局函数</h3><p>1.在main.js中直接定义一个函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.prototype.getToken = <span class="function"><span class="title">function</span></span> () &#123;&#125;</span><br></pre></td></tr></table></figure><p>后在组件中调用：this.getToken()</p><p>2.定义一个js文件，然后挂载到main.js中</p><p>定义的js文件:universal.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/*配置通用方法， 新增方法请写备注*/</span><br><span class="line">exports.install = <span class="keyword">function</span> (Vue, options) &#123;    </span><br><span class="line">    /*判断是不是图片*/</span><br><span class="line">    Vue.prototype.isImage = <span class="keyword">function</span> (fileName) &#123;</span><br><span class="line">        <span class="keyword">if</span> (typeof fileName !== <span class="string">&#x27;string&#x27;</span>) <span class="built_in">return</span>;</span><br><span class="line">        <span class="built_in">let</span> name = fileName.toLowerCase();</span><br><span class="line">        <span class="built_in">return</span> name.endsWith(<span class="string">&#x27;.png&#x27;</span>) || name.endsWith(<span class="string">&#x27;.jpeg&#x27;</span>) || name.endsWith(<span class="string">&#x27;.jpg&#x27;</span>) || name.endsWith(<span class="string">&#x27;.png&#x27;</span>) || name.endsWith(<span class="string">&#x27;.bmp&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>挂载到 main.js中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import Universal from <span class="string">&#x27;./assets/theme/js/universal&#x27;</span></span><br><span class="line">Vue.use(Universal)</span><br></pre></td></tr></table></figure><p>在页面中调用其中的某个方法：this.isImage(‘xxx’)</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vuex状态管理模式</title>
      <link href="/2022/10/08/vue8/"/>
      <url>/2022/10/08/vue8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>State：定义存储状态对象</p><p>Getter:获取到State后，对其计算返回需要的值（获取计算状态对象）</p><p>Mutation：提交更新状态对象（同步，异步使用：Action）</p><p>Action:提交一个或多个Mutation，不是直接变更状态</p><p>Module:模块化vuex，可以让每一个模块拥有自己的state、mutation、action、getters,使得结构非常清晰，方便管理。</p></blockquote><span id="more"></span><ol><li>定义（在main.js中）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">const store = new vuex.Store(&#123;</span><br><span class="line">state: &#123;</span><br><span class="line">orderlist: &#123;&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">mutations: &#123;</span><br><span class="line">setOrderValue(state, orderlist) &#123;</span><br><span class="line">state.orderlist = orderlist</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">getters: &#123;</span><br><span class="line">getOrderValue: state =&gt; state.orderlist,</span><br><span class="line">&#125;,</span><br><span class="line">actions: &#123;</span><br><span class="line">&#125;,</span><br><span class="line">modules: &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>2.提交状态对象<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.<span class="variable">$store</span>.commit(<span class="string">&quot;setOrderValue&quot;</span>, <span class="string">&quot;要提交的数据&quot;</span>);</span><br></pre></td></tr></table></figure>3.获取状态对象<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var orderLists= this.<span class="variable">$store</span>.getters.getOrderValue;</span><br></pre></td></tr></table></figure>需要注意的是状态对象信息在页面刷新后就不存在了。</li></ol>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue Router的封装配置</title>
      <link href="/2022/10/08/vue7/"/>
      <url>/2022/10/08/vue7/</url>
      
        <content type="html"><![CDATA[<p>1.安装（如果在创建项目的时候没有确认安装）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install vue-router --save</span><br></pre></td></tr></table></figure><p>之后在src下会生成一个文件夹router，这里我们删除这个文件夹。（安装好就行了，不用它的默认文件夹，我们自己封装）</p><span id="more"></span><p>2.配置</p><p>在根目录下（与main.js同级），创建routes.js文件，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import Login from <span class="string">&#x27;@/components/Login&#x27;</span></span><br><span class="line">import index from <span class="string">&#x27;@/components/index&#x27;</span></span><br><span class="line"></span><br><span class="line">import Theme from <span class="string">&#x27;@/Views/Theme&#x27;</span></span><br><span class="line">import PermissionManage from <span class="string">&#x27;@/Views/PermissionManage&#x27;</span></span><br><span class="line">import MenuManage from <span class="string">&#x27;@/Views/MenuManage&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default [</span><br><span class="line">    &#123; path: <span class="string">&quot;/&quot;</span>, component: Login &#125;,/*默认登录页面*/</span><br><span class="line">    &#123; path: <span class="string">&quot;/Login&quot;</span>, component: Login &#125;,/*路由跳转登录页面*/</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&quot;/index&quot;</span>, component: index, children: [</span><br><span class="line">            &#123; path: <span class="string">&quot;/&quot;</span>, component: Theme &#125;,/*二级菜单主页*/            </span><br><span class="line">            &#123; path: <span class="string">&quot;/PermissionManage&quot;</span>, component: PermissionManage &#125;,/*角色权限管理*/</span><br><span class="line">            &#123; path: <span class="string">&quot;/MenuManage&quot;</span>, component: MenuManage &#125;,/*菜单管理*/</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>文件夹目录结构：</p><p>默认主页是登录页面：Login</p><p>登录成功后进入页面：index 这个页面的构成如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div <span class="built_in">id</span>=<span class="string">&quot;index&quot;</span>&gt;</span><br><span class="line">      &lt;mainheader&gt;&lt;/mainheader&gt;</span><br><span class="line">      &lt;el-container&gt;</span><br><span class="line">        &lt;mainleft&gt;&lt;/mainleft&gt;</span><br><span class="line">        &lt;maincontent&gt;&lt;/maincontent&gt;</span><br><span class="line">      &lt;/el-container&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  import mainheader from <span class="string">&quot;@/components/mainheader&quot;</span>;</span><br><span class="line">  import mainleft from <span class="string">&quot;@/components/mainleft&quot;</span>;</span><br><span class="line">  import maincontent from <span class="string">&quot;@/components/maincontent&quot;</span>;</span><br><span class="line">  import mainbottom from <span class="string">&quot;@/components/mainbottom&quot;</span>;</span><br><span class="line">  import &#123; navActive &#125; from <span class="string">&quot;../assets/theme/js/frame&quot;</span>;</span><br><span class="line">  <span class="built_in">export</span> default &#123;</span><br><span class="line">    inject: [<span class="string">&quot;reload&quot;</span>],</span><br><span class="line">    <span class="function"><span class="title">created</span></span>() &#123;</span><br><span class="line">      var getuid = sessionStorage.getItem(<span class="string">&quot;uid&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> (getuid == null) &#123;</span><br><span class="line">        this.<span class="variable">$router</span>.push(&#123;</span><br><span class="line">          path: `/`,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        this.reload();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">      setTimeout(() =&gt; &#123;</span><br><span class="line">        this.reload();       </span><br><span class="line">      &#125;, 1000);</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">      mainheader,</span><br><span class="line">      mainleft,</span><br><span class="line">      maincontent,</span><br><span class="line">      mainbottom,</span><br><span class="line">    &#125;,</span><br><span class="line">    name: <span class="string">&quot;Index&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure><p> 由顶部（mainheader）、左边菜单（mainleft），内容区（maincontent）、底部（mainbottom）构成</p><p>maincontent （内容区）包含有路由容器：router-view</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div <span class="built_in">id</span>=<span class="string">&quot;maincontent&quot;</span>&gt;      </span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=<span class="string">&quot;rcontent&quot;</span>&gt;</span><br><span class="line">        &lt;router-view :key=<span class="string">&quot;<span class="variable">$route</span>.fullPath&quot;</span>&gt;&lt;/router-view&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  <span class="built_in">export</span> default &#123;&#125;;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>左边菜单通过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">this.<span class="variable">$router</span>.push(&#123;</span><br><span class="line"></span><br><span class="line">     path: `/` +Theme  ,</span><br><span class="line"></span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><p>通过路由容易的渲染，便可在内容区渲染出路由名Theme这个页面，</p><p>同样的页面还有：PermissionManage、MenuManage</p><p>这些都是相对于index的子菜单或称为二级菜单；路由的表现形式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">path: <span class="string">&quot;/index&quot;</span>, component: index, children: [</span><br><span class="line">           &#123; path: <span class="string">&quot;/&quot;</span>, component: Theme &#125;,/*二级菜单主页*/            </span><br><span class="line">           &#123; path: <span class="string">&quot;/PermissionManage&quot;</span>, component: PermissionManage &#125;,/*角色权限管理*/</span><br><span class="line">           &#123; path: <span class="string">&quot;/MenuManage&quot;</span>, component: MenuManage &#125;,/*菜单管理*/</span><br><span class="line">       ]</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure><p>3.在main.js中引入并挂载路由</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import Routes from <span class="string">&#x27;./routes.js&#x27;</span></span><br><span class="line"></span><br><span class="line">const router = new VueRouter(&#123;</span><br><span class="line">routes: Routes,</span><br><span class="line">mode: <span class="string">&quot;history&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>配置好路由后，除了通过router-veiw，还可通过 router-link实现路由跳转</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">示例：&lt;router-link to=<span class="string">&quot;/home&quot;</span>&gt;&lt;/router-link&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue错误笔记集合</title>
      <link href="/2022/10/08/vue6/"/>
      <url>/2022/10/08/vue6/</url>
      
        <content type="html"><![CDATA[<h3 id="Vue-is-not-defined"><a href="#Vue-is-not-defined" class="headerlink" title="Vue is not defined"></a>Vue is not defined</h3><p>在使用HTML button：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click=<span class="string">&quot;login()&quot;</span>&gt;登录&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>出现了错误提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue is not defined</span><br></pre></td></tr></table></figure><p>解决办法：</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1）&lt;button <span class="built_in">type</span>=<span class="string">&quot;button&quot;</span> @click=<span class="string">&quot;login()&quot;</span>&gt;登录&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">2)&lt;button @click.prevent=<span class="string">&quot;login()&quot;</span>&gt;登录&lt;/button&gt;</span><br></pre></td></tr></table></figure><h3 id="Vue项目渲染模式为history时刷新异常"><a href="#Vue项目渲染模式为history时刷新异常" class="headerlink" title="Vue项目渲染模式为history时刷新异常"></a>Vue项目渲染模式为history时刷新异常</h3><p>图片显示异常、以及控制台出现js引入路径错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;static/live2d-widget/lib/L2Dwidget.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"> &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;static/js/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"> headimg: <span class="string">&quot;./static/img/head.jpg&quot;</span>,</span><br></pre></td></tr></table></figure><p>以上三个路径改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/static/live2d-widget/lib/L2Dwidget.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"> &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/static/js/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"> headimg: <span class="string">&quot;/static/img/head.jpg&quot;</span>,</span><br></pre></td></tr></table></figure><p>就可以了。</p><p>这是因为：</p><blockquote><p>.&#x2F;     是当前所在目录（相对路径）</p><p>&#x2F;      是项目根目录（绝对路径）</p><p>hash模式的根路径即项目的根目录，是固定的，而history模式以&#x2F;开头的路径会被当做是根路径，所以以 .&#x2F; 在hisorty模式下引入文件自然是无效的。</p></blockquote><p>所以，其实无论是哪种模式，只要以    &#x2F;    引入静态文件都是可以的。</p><h3 id="nginx配置的网页刷新-404"><a href="#nginx配置的网页刷新-404" class="headerlink" title="nginx配置的网页刷新 404"></a>nginx配置的网页刷新 404</h3><p>如果我们在nginx下添加以下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html</span><br></pre></td></tr></table></figure><p>刷新虽然没有出现404，但是页面还是没有正常显示（白屏），打开控制台发现以下错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uncaught SyntaxError:Unexpected token &lt;</span><br></pre></td></tr></table></figure><p>这是由于：nginx配置与代码静态资源打包方式不匹配</p><p>需要修改：</p><p>index.js下build节点中以下属性改为绝对路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">assetsPublicPath:<span class="string">&#x27;/&#x27;</span>,</span><br></pre></td></tr></table></figure><p>这样刷新就正常了。</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cnpm 安装指定版本的脚手架vue-cli</title>
      <link href="/2022/10/08/vue5/"/>
      <url>/2022/10/08/vue5/</url>
      
        <content type="html"><![CDATA[<p>1.安装npm</p><p>去Node.js官网下载安装Node.js，npm也就安装上了。</p><p>2.安装国内淘宝镜像，以后就可以通过cnpm代替npm指令，使用国内源，执行效率更高：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><span id="more"></span><p>3.安装vue-cli指定的版本</p><p>（1）.查询脚手架版本列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm view vue-cli versions --json</span><br></pre></td></tr></table></figure><p>（2）.安装指定版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g vue-cli@2.9.6 --save</span><br></pre></td></tr></table></figure><h3 id="安装指定版本模块：cnpm-install-g-模块-版本号-–save"><a href="#安装指定版本模块：cnpm-install-g-模块-版本号-–save" class="headerlink" title="安装指定版本模块：cnpm install -g 模块@版本号 –save"></a>安装指定版本模块：cnpm install -g 模块@版本号 –save</h3>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-cli更新</title>
      <link href="/2022/10/08/vue4/"/>
      <url>/2022/10/08/vue4/</url>
      
        <content type="html"><![CDATA[<p>1.卸载旧版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall vue-cli -g  </span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">yarn global remove vue-cli</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><p>2.安装新版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">yarn global add@vue/cli</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中引入Jquery</title>
      <link href="/2022/10/08/vue3/"/>
      <url>/2022/10/08/vue3/</url>
      
        <content type="html"><![CDATA[<p>1.首先在依赖中填写要引入jquery版本信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;@babel/polyfill&quot;</span>: <span class="string">&quot;^7.12.1&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;ant-design-vue&quot;</span>: <span class="string">&quot;^1.6.5&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;axios&quot;</span>: <span class="string">&quot;^0.20.0&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;element-ui&quot;</span>: <span class="string">&quot;^2.13.2&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;hexo-helper-live2d&quot;</span>: <span class="string">&quot;^3.1.1&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;jquery&quot;</span>: <span class="string">&quot;^3.6.0&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;view-design&quot;</span>: <span class="string">&quot;^4.4.0&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;vue&quot;</span>: <span class="string">&quot;^2.5.2&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;vue-axios&quot;</span>: <span class="string">&quot;^3.1.1&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;vue-resource&quot;</span>: <span class="string">&quot;^1.5.1&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;vue-router&quot;</span>: <span class="string">&quot;^3.4.7&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;wangeditor&quot;</span>: <span class="string">&quot;^4.7.10&quot;</span></span><br><span class="line"></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>  <span id="more"></span><p>  “jquery”: “^3.6.0”–这就是要引入的Jquery及版本</p><ol start="2"><li>在build文件夹下的webpack.base.conf.js文件中加入以下代码    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var webpack = require(<span class="string">&quot;webpack&quot;</span>)</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line"></span><br><span class="line">  plugins: [</span><br><span class="line"></span><br><span class="line">    new webpack.ProvidePlugin(&#123;</span><br><span class="line"></span><br><span class="line">      jQuery: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line"></span><br><span class="line">      $: <span class="string">&quot;jquery&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>在main.js中引入（全局）jquery<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import $ from <span class="string">&#x27;jquery&#x27;</span></span><br></pre></td></tr></table></figure>注意因为第二步已经使用了jquery，不需要用在main.js中 使用vue.use()，否则：</li></ol><h3 id="vue-cil-浏览器控制台报错：this-init-is-not-a-function"><a href="#vue-cil-浏览器控制台报错：this-init-is-not-a-function" class="headerlink" title="vue-cil 浏览器控制台报错：this._init is not a function"></a>vue-cil 浏览器控制台报错：this._init is not a function</h3><ol start="4"><li>最后就是运行项目。cmd里面安装依赖了：</li></ol><h3 id="npm-install-–save-jquery"><a href="#npm-install-–save-jquery" class="headerlink" title="npm install –save jquery"></a>npm install –save jquery</h3><p>如果有淘宝镜像就使用命令：</p><h3 id="cnpm-install-–save-jquery"><a href="#cnpm-install-–save-jquery" class="headerlink" title="cnpm install –save jquery"></a>cnpm install –save jquery</h3><p>至此，就可以使用jquery了，$这个符号也能被识别了。</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 打包后图片显示，或因为路径原因，显示白屏？</title>
      <link href="/2022/10/08/vue2/"/>
      <url>/2022/10/08/vue2/</url>
      
        <content type="html"><![CDATA[<p>打包后由于路径不对，导致资源文件加载不到，需要调整：</p><p>1.config&#x2F;index.js 修改以下两个地方</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">1).</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line"></span><br><span class="line">dev:&#123;</span><br><span class="line"></span><br><span class="line">// Paths</span><br><span class="line"></span><br><span class="line">assetsSubDirectory: <span class="string">&#x27;static&#x27;</span>,</span><br><span class="line"></span><br><span class="line">// assetsPublicPath: <span class="string">&#x27;/&#x27;</span>,/*调试*/</span><br><span class="line"></span><br><span class="line">assetsPublicPath: <span class="string">&#x27;./&#x27;</span>,/*发布*/</span><br><span class="line"></span><br><span class="line">proxyTable: &#123;</span><br><span class="line"></span><br><span class="line">changeOrigin: <span class="literal">true</span>,/*允许跨域*/</span><br><span class="line"></span><br><span class="line">\&quot;/api\&quot;: &#123;</span><br><span class="line"></span><br><span class="line">target:\&quot;https://www.romanticlife.top\&quot;,</span><br><span class="line"></span><br><span class="line">// target:\&quot;http://localhost:8090\&quot;,</span><br><span class="line"></span><br><span class="line">secure:<span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">changeOrigin: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">pathRewrite: &#123;</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2).</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">build: &#123;</span><br><span class="line"></span><br><span class="line">// Template <span class="keyword">for</span> index.html</span><br><span class="line"></span><br><span class="line">index: path.resolve(__dirname, <span class="string">&#x27;../dist/index.html&#x27;</span>),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// Paths</span><br><span class="line"></span><br><span class="line">assetsRoot: path.resolve(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line"></span><br><span class="line">assetsSubDirectory: <span class="string">&#x27;static&#x27;</span>,</span><br><span class="line"></span><br><span class="line">// assetsPublicPath: <span class="string">&#x27;/&#x27;</span>,/*调试*/</span><br><span class="line"></span><br><span class="line">assetsPublicPath: <span class="string">&#x27;./&#x27;</span>,/*发布*/</span><br></pre></td></tr></table></figure><p>一般来说第一步就能解决问题，如果还不行就继续以下步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2.build/webpack.prod.conf.js</span><br><span class="line">在output中添加publicPath:<span class="string">&#x27;./&#x27;</span>,</span><br><span class="line"></span><br><span class="line">3.build/utils.js</span><br><span class="line">51行---修改为 publicPath:<span class="string">&#x27;../../&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何设置hexo首页只显示部分摘要而不是全部内容？</title>
      <link href="/2022/10/03/hexo1/"/>
      <url>/2022/10/03/hexo1/</url>
      
        <content type="html"><![CDATA[<h2 id="实现的方法有两种"><a href="#实现的方法有两种" class="headerlink" title="实现的方法有两种"></a>实现的方法有两种</h2><h3 id="方法1：添加概述（description）-属性"><a href="#方法1：添加概述（description）-属性" class="headerlink" title="方法1：添加概述（description） 属性"></a>方法1：添加概述（description） 属性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">description:  为了便于检索和页面美观，首页的文章可以显示部分或者隐藏正文内容。</span><br></pre></td></tr></table></figure><p>这种方法比较繁琐，因为这种情况下我们并不会花费太多的时间去写描述，由此会降低我们文章的质量。</p><h3 id="方法2：添加文章阶段特性"><a href="#方法2：添加文章阶段特性" class="headerlink" title="方法2：添加文章阶段特性"></a>方法2：添加文章阶段特性</h3><p>在我们需要隐藏内容的起始行添加以下内容即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Freemind </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封装axios，添加拦截器</title>
      <link href="/2022/09/29/vue1/"/>
      <url>/2022/09/29/vue1/</url>
      
        <content type="html"><![CDATA[<h3 id="1-安装axios"><a href="#1-安装axios" class="headerlink" title="1.安装axios"></a>1.安装axios</h3><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure><h3 id="2-封装axios"><a href="#2-封装axios" class="headerlink" title="2.封装axios"></a>2.封装axios</h3><p>在src下新建文件夹：axios，添加http.js，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import axios from <span class="string">&quot;axios&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default axios</span><br><span class="line">/* post 请求方法 */</span><br><span class="line"><span class="built_in">export</span> <span class="keyword">function</span> post(url, data = &#123;&#125;) &#123;</span><br><span class="line">    <span class="built_in">return</span> new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">        axios.post(url, data)</span><br><span class="line">            .<span class="keyword">then</span>(res =&gt; &#123;</span><br><span class="line">                resolve(res)</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(err =&gt; &#123;</span><br><span class="line">                reject(err)</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* get 请求方法 */</span><br><span class="line"><span class="built_in">export</span> <span class="keyword">function</span> get(url, params = &#123;&#125;) &#123;</span><br><span class="line">    <span class="built_in">return</span> new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">        axios</span><br><span class="line">            .get(url, &#123;</span><br><span class="line">                params: params</span><br><span class="line">            &#125;)</span><br><span class="line">            .<span class="keyword">then</span>(res =&gt; &#123;</span><br><span class="line">                resolve(res)</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(err =&gt; &#123;</span><br><span class="line">                reject(err)</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x2F;* patch 请求方法 *&#x2F;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> <span class="keyword">function</span> patch(url, data = &#123;&#125;) &#123;</span><br><span class="line">    <span class="built_in">return</span> new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">        axios.patch(url, data).<span class="keyword">then</span>(</span><br><span class="line">            res =&gt; &#123;</span><br><span class="line">                resolve(res)</span><br><span class="line">            &#125;,</span><br><span class="line">            err =&gt; &#123;</span><br><span class="line">                reject(err)</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* put 请求方法 */</span><br><span class="line"><span class="built_in">export</span> <span class="keyword">function</span> put(url, data = &#123;&#125;) &#123;</span><br><span class="line">    <span class="built_in">return</span> new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">        axios.put(url, data).<span class="keyword">then</span>(</span><br><span class="line">            res =&gt; &#123;</span><br><span class="line">                resolve(res)</span><br><span class="line">            &#125;,</span><br><span class="line">            err =&gt; &#123;</span><br><span class="line">                reject(err)</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-从main-js引入，并加入拦截器"><a href="#3-从main-js引入，并加入拦截器" class="headerlink" title="3.从main.js引入，并加入拦截器"></a>3.从main.js引入，并加入拦截器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import http from <span class="string">&quot;./axios/http&quot;</span>//封装axios方法:post,get,patch,put</span><br><span class="line"></span><br><span class="line">Vue.prototype.<span class="variable">$post</span> = http.post</span><br><span class="line"></span><br><span class="line">Vue.prototype.<span class="variable">$get</span> = http.get</span><br><span class="line"></span><br><span class="line">Vue.prototype.<span class="variable">$patch</span> = http.patch</span><br><span class="line"></span><br><span class="line">Vue.prototype.<span class="variable">$put</span> = http.put</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********配置axios--begin***********/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//基础参数</span><br><span class="line"></span><br><span class="line">Axios.create(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">timeout</span>: 1000 * 30,</span><br><span class="line"></span><br><span class="line">  withCredentials: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 添加请求拦截器</span><br><span class="line"></span><br><span class="line">Axios.interceptors.request.use(<span class="keyword">function</span> (config) &#123;</span><br><span class="line"></span><br><span class="line">  config.headers = &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">return</span> config;</span><br><span class="line"></span><br><span class="line">&#125;, <span class="keyword">function</span> (error) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">return</span> Promise.reject(error);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 添加响应拦截器</span><br><span class="line"></span><br><span class="line">Axios.interceptors.response.use(<span class="keyword">function</span> (res) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (res.status === 200) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (res.data.code == <span class="string">&quot;5002&quot;</span>) &#123;</span><br><span class="line"></span><br><span class="line">      Message(res.data.msg);</span><br><span class="line"></span><br><span class="line">      setTimeout(() =&gt; &#123;</span><br><span class="line"></span><br><span class="line">        router.push(&#123;</span><br><span class="line"></span><br><span class="line">          path: `/`,</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">      &#125;, 2000);</span><br><span class="line"></span><br><span class="line">      <span class="built_in">return</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">      <span class="built_in">return</span> res;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> Message.error(res.statusText);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;, <span class="keyword">function</span> (error) &#123;</span><br><span class="line"></span><br><span class="line">  const status =</span><br><span class="line"></span><br><span class="line">    (error.response &amp;&amp;</span><br><span class="line"></span><br><span class="line">      error.response.status &amp;&amp;</span><br><span class="line"></span><br><span class="line">      error.response.status) ||</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  var msg = <span class="string">&#x27;未知错误&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line"></span><br><span class="line">    error.code == <span class="string">&#x27;ECONNABORTED&#x27;</span> &amp;&amp;</span><br><span class="line"></span><br><span class="line">    error.message.indexOf(<span class="string">&#x27;timeout&#x27;</span>) != -1</span><br><span class="line"></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">    msg = <span class="string">&#x27;请求超时...&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (status === 404)</span><br><span class="line"></span><br><span class="line">    msg = error.response.data.path + <span class="string">&#x27; 接口404报错。&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (status === 500)</span><br><span class="line"></span><br><span class="line">    msg = <span class="string">&#x27;网络已断开或服务器错误...&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (status === 504)</span><br><span class="line"></span><br><span class="line">    msg = <span class="string">&#x27;数据响应超时，请重新登录操作...&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  Message(msg);</span><br><span class="line"></span><br><span class="line">  /*</span><br><span class="line"></span><br><span class="line">  //控制台打印错误</span><br><span class="line"></span><br><span class="line">  <span class="built_in">return</span> Promise.reject(msg);</span><br><span class="line"></span><br><span class="line">  */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">/***********配置axios--end***********/</span><br></pre></td></tr></table></figure><h3 id="4-调用"><a href="#4-调用" class="headerlink" title="4.调用"></a>4.调用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">selectinfo</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">  this.<span class="variable">$post</span>(</span><br><span class="line"></span><br><span class="line">   apiUrl,</span><br><span class="line"></span><br><span class="line">    JSON.stringify(this.selectParameters)</span><br><span class="line"></span><br><span class="line">  ).<span class="keyword">then</span>((res) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    this.selectParameters.totalElements = res.data.data.totalElements;</span><br><span class="line"></span><br><span class="line">    this.listinfo =res.data.data.list;</span><br><span class="line"></span><br><span class="line">  &#125;).catch(err=&gt;&#123;console.log(err)&#125;);</span><br><span class="line"></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Electron学习之路 - Processes</title>
      <link href="/2022/09/28/electron1/"/>
      <url>/2022/09/28/electron1/</url>
      
        <content type="html"><![CDATA[<h4> 阅读本文前建议先看：<a href="https://www.romanticlife.top/blog/0/236" title="" target="">基础教程</a></h4><h4> 你也可以查看：<a href="https://www.electronjs.org/zh/docs/latest/tutorial/process-model" title="" target="">官网资料</a></h4><h3 id="进程模型"><a href="#进程模型" class="headerlink" title="进程模型"></a>进程模型</h3><p>Electron从Chromium继承了它的多进程架构，这使得该框架在架构上非常类似于现代web浏览器。本文将扩展 <a href="https://www.romanticlife.top/blog/0/236" title="" target="">教程</a> 中应用的概念。<br>为什么不是单进程》？</p><p>Web浏览器是非常复杂的应用程序。除了显示网页内容的主要功能之外，他们还有许多次要职责，比如管理多个窗口(或标签)和加载第三方扩展。</p><p>在早期，浏览器通常使用一个进程来实现所有这些功能。虽然这种模式意味着你打开的每个标签的开销更小，但它也意味着一个网站的崩溃或挂起会影响整个浏览器。</p><span id="more"></span><h3 id="多进程模型"><a href="#多进程模型" class="headerlink" title="多进程模型"></a>多进程模型</h3><p>为了解决这个问题，Chrome团队决定每个标签将在自己的过程中呈现，以限制网页上的漏洞或恶意代码可能对整个应用程序造成的伤害。然后，一个单一的浏览器进程控制这些进程，以及应用程序的整个生命周期。</p><p>Electron应用的结构与此非常相似。</p><p>作为一个应用程序开发者，你控制两种类型的进程:main和renderer。</p><p>这些过程类似于Chrome自己的浏览器及其渲染过程。</p><h3 id="主进程"><a href="#主进程" class="headerlink" title="主进程"></a>主进程</h3><p>每个Electron应用程序都有一个单独的主进程，它充当应用程序的入口点。主进程运行在Node.js环境中，这意味着它能够require模块并使用所有Node.js api。</p><h3 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h3><p>主进程的主要目的是使用 <a href="https://www.electronjs.org/zh/docs/latest/api/browser-window" title="" target="">BrowserWindow</a> 模块创建和管理应用程序窗口。</p><p>BrowserWindow类的每个实例都会创建一个应用程序窗口，在一个单独的渲染进程中加载一个网页。你可以在主进程中使用窗口的 <a href="https://www.electronjs.org/zh/docs/latest/api/web-contents" title="" target="">webContents</a> 对象与这些web内容进行交互。</p><blockquote><p>main.js</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const &#123; BrowserWindow &#125; = require(<span class="string">&#x27;electron&#x27;</span>)</span><br><span class="line"></span><br><span class="line">const win = new BrowserWindow(&#123; width: 800, height: 1500 &#125;)</span><br><span class="line">win.loadURL(<span class="string">&#x27;https://github.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line">const contents = win.webContents</span><br><span class="line">console.log(contents)</span><br></pre></td></tr></table></figure><p>注意:渲染器进程也会为  <a href="https://www.electronjs.org/zh/docs/latest/tutorial/web-embeds" title="" target="">web embeds</a> 创建，比如BrowserView模块。webContents对象也可以访问嵌入的web内容。</p><p>因为BrowserWindow模块是一个  <a href="https://nodejs.org/api/events.html#events_class_eventemitter" title="" target="">EventEmitter</a> ，您还可以为各种用户事件添加处理程序(例如，最小化或最大化窗口)。</p><p>当BrowserWindow实例被销毁时，它对应的渲染进程也会终止。</p><h3 id="应用的声明周期"><a href="#应用的声明周期" class="headerlink" title="应用的声明周期"></a>应用的声明周期</h3><p>主进程还通过Electron的 <a href="https://www.electronjs.org/zh/docs/latest/api/app" title="" target="">app</a> 模块控制应用程序的生命周期。此模块提供了大量事件和方法，您可以使用它们来添加自定义应用程序行为(例如，以编程方式退出应用程序、修改应用程序停靠或显示关于面板)。</p><p>作为一个实际的例子，在快速入门指南中显示的应用程序使用应用程序api来创建一个更原生的应用程序窗口体验。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后端返回的数据会带一个换行符（“↵”），前端如何根据该符号进行换行展示</title>
      <link href="/2022/09/28/html1/"/>
      <url>/2022/09/28/html1/</url>
      
        <content type="html"><![CDATA[<h3 id="方法一：textarea赋值"><a href="#方法一：textarea赋值" class="headerlink" title="方法一：textarea赋值"></a>方法一：textarea赋值</h3><p>　　当我们拿到后端返回的数据时，直接通过v-model绑定给textarea，就会有默认的换行，但是它不能随内容高度增加textarea高度实现自适应，如果用JS来实现的话，相对麻烦一点。</p><h3 id="方法二：使用v-html输出文本"><a href="#方法二：使用v-html输出文本" class="headerlink" title="方法二：使用v-html输出文本"></a>方法二：使用v-html输出文本</h3><p>　　“↵”符号在html中会识别别为\r,\n等转义字符，所以我们可以使用\r\n去替换（.replace(&#x2F;(\r\n|\n|\r)&#x2F;gm, ‘ &lt; br &#x2F;&gt; ‘)）</p><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ &lt;span v-html=<span class="string">&quot;detail.replace(/(\r\n|\n|\r)/gm, &#x27;&lt;br /&gt;&#x27;)&quot;</span>&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
